/*
Copyright 2021 The Kruise Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openkruise/kruise/apis/apps/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PodMarkerLister helps list PodMarkers.
// All objects returned here must be treated as read-only.
type PodMarkerLister interface {
	// List lists all PodMarkers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PodMarker, err error)
	// PodMarkers returns an object that can list and get PodMarkers.
	PodMarkers(namespace string) PodMarkerNamespaceLister
	PodMarkerListerExpansion
}

// podMarkerLister implements the PodMarkerLister interface.
type podMarkerLister struct {
	indexer cache.Indexer
}

// NewPodMarkerLister returns a new PodMarkerLister.
func NewPodMarkerLister(indexer cache.Indexer) PodMarkerLister {
	return &podMarkerLister{indexer: indexer}
}

// List lists all PodMarkers in the indexer.
func (s *podMarkerLister) List(selector labels.Selector) (ret []*v1alpha1.PodMarker, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodMarker))
	})
	return ret, err
}

// PodMarkers returns an object that can list and get PodMarkers.
func (s *podMarkerLister) PodMarkers(namespace string) PodMarkerNamespaceLister {
	return podMarkerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PodMarkerNamespaceLister helps list and get PodMarkers.
// All objects returned here must be treated as read-only.
type PodMarkerNamespaceLister interface {
	// List lists all PodMarkers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PodMarker, err error)
	// Get retrieves the PodMarker from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PodMarker, error)
	PodMarkerNamespaceListerExpansion
}

// podMarkerNamespaceLister implements the PodMarkerNamespaceLister
// interface.
type podMarkerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PodMarkers in the indexer for a given namespace.
func (s podMarkerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PodMarker, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodMarker))
	})
	return ret, err
}

// Get retrieves the PodMarker from the indexer for a given namespace and name.
func (s podMarkerNamespaceLister) Get(name string) (*v1alpha1.PodMarker, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("podmarker"), name)
	}
	return obj.(*v1alpha1.PodMarker), nil
}
