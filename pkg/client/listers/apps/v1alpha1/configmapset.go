/*
Copyright 2021 The Kruise Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	appsv1alpha1 "github.com/openkruise/kruise/apis/apps/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ConfigMapSetLister helps list ConfigMapSets.
// All objects returned here must be treated as read-only.
type ConfigMapSetLister interface {
	// List lists all ConfigMapSets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*appsv1alpha1.ConfigMapSet, err error)
	// ConfigMapSets returns an object that can list and get ConfigMapSets.
	ConfigMapSets(namespace string) ConfigMapSetNamespaceLister
	ConfigMapSetListerExpansion
}

// configMapSetLister implements the ConfigMapSetLister interface.
type configMapSetLister struct {
	listers.ResourceIndexer[*appsv1alpha1.ConfigMapSet]
}

// NewConfigMapSetLister returns a new ConfigMapSetLister.
func NewConfigMapSetLister(indexer cache.Indexer) ConfigMapSetLister {
	return &configMapSetLister{listers.New[*appsv1alpha1.ConfigMapSet](indexer, appsv1alpha1.Resource("configmapset"))}
}

// ConfigMapSets returns an object that can list and get ConfigMapSets.
func (s *configMapSetLister) ConfigMapSets(namespace string) ConfigMapSetNamespaceLister {
	return configMapSetNamespaceLister{listers.NewNamespaced[*appsv1alpha1.ConfigMapSet](s.ResourceIndexer, namespace)}
}

// ConfigMapSetNamespaceLister helps list and get ConfigMapSets.
// All objects returned here must be treated as read-only.
type ConfigMapSetNamespaceLister interface {
	// List lists all ConfigMapSets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*appsv1alpha1.ConfigMapSet, err error)
	// Get retrieves the ConfigMapSet from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*appsv1alpha1.ConfigMapSet, error)
	ConfigMapSetNamespaceListerExpansion
}

// configMapSetNamespaceLister implements the ConfigMapSetNamespaceLister
// interface.
type configMapSetNamespaceLister struct {
	listers.ResourceIndexer[*appsv1alpha1.ConfigMapSet]
}
