/*
Copyright 2021 The Kruise Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	appsv1alpha1 "github.com/openkruise/kruise/apis/apps/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// CloneSetLister helps list CloneSets.
// All objects returned here must be treated as read-only.
type CloneSetLister interface {
	// List lists all CloneSets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*appsv1alpha1.CloneSet, err error)
	// CloneSets returns an object that can list and get CloneSets.
	CloneSets(namespace string) CloneSetNamespaceLister
	CloneSetListerExpansion
}

// cloneSetLister implements the CloneSetLister interface.
type cloneSetLister struct {
	listers.ResourceIndexer[*appsv1alpha1.CloneSet]
}

// NewCloneSetLister returns a new CloneSetLister.
func NewCloneSetLister(indexer cache.Indexer) CloneSetLister {
	return &cloneSetLister{listers.New[*appsv1alpha1.CloneSet](indexer, appsv1alpha1.Resource("cloneset"))}
}

// CloneSets returns an object that can list and get CloneSets.
func (s *cloneSetLister) CloneSets(namespace string) CloneSetNamespaceLister {
	return cloneSetNamespaceLister{listers.NewNamespaced[*appsv1alpha1.CloneSet](s.ResourceIndexer, namespace)}
}

// CloneSetNamespaceLister helps list and get CloneSets.
// All objects returned here must be treated as read-only.
type CloneSetNamespaceLister interface {
	// List lists all CloneSets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*appsv1alpha1.CloneSet, err error)
	// Get retrieves the CloneSet from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*appsv1alpha1.CloneSet, error)
	CloneSetNamespaceListerExpansion
}

// cloneSetNamespaceLister implements the CloneSetNamespaceLister
// interface.
type cloneSetNamespaceLister struct {
	listers.ResourceIndexer[*appsv1alpha1.CloneSet]
}
