
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: podmarkers.apps.kruise.io
spec:
  group: apps.kruise.io
  names:
    kind: PodMarker
    listKind: PodMarkerList
    plural: podmarkers
    shortNames:
    - marker
    singular: podmarker
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The desired number of pods that should be marked.
      jsonPath: .status.desired
      name: Desired
      type: integer
    - description: The number of pods that have been marked successful.
      jsonPath: .status.succeeded
      name: Succeeded
      type: integer
    - description: The number of failures when marking.
      jsonPath: .status.failed
      name: Failed
      type: integer
    - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
      jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodMarker is the Schema for the podmarkers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodMarkerSpec defines the desired state of PodMarker
            properties:
              markItems:
                description: MarkItems indicates the marks users want to mark, support Labels and Annotations.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: The Annotations users want to mark
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: The Labels users want to mark
                    type: object
                type: object
              matchPreferences:
                description: MatchPreferences defines the different priorities for the Pods that could be marked; The Pods having higher priority will be marked preferentially; MatchPreferences is an sequential list, where the Pods satisfying MatchPreferences[i] will have higher priority than the Pods satisfying MatchPreferences[j] if i < j. If len(MatchPreferences) > 1, the sorting rule of Pods when marking is similar to lexicographic order.
                items:
                  description: PodMarkerPreference actually describes the priority of Pods. PodMarkerPreference tells PodMarker what the Pods having this priority should look like.
                  properties:
                    nodeSelector:
                      description: The Pods having this priority should run in the nodes that match this NodeSelector. default is nil
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                    podReady:
                      description: If PodReady is true, the Pods having this priority should be Ready, and vice versa. default is nil
                      type: boolean
                    podSelector:
                      description: The Pods having this priority should match this PodSelector. default is nil
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
                type: array
              matchRequirements:
                description: MatchRequirements describe the requirements for Pods that users want to mark.
                properties:
                  nodeSelector:
                    description: NodeLabelSelector describe the node label requirement for matched Pods. The matched Pods must run in these requirement-satisfied nodes.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  podSelector:
                    description: PodLabelSelector describe the pod label requirement for matched Pods.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
              strategy:
                description: "INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \"make\" to regenerate code after modifying this file \n Strategy defines the behaviors when marking Pods."
                properties:
                  conflictPolicy:
                    description: ConflictPolicy describes the behavior of PodMarker when some matched Pods that already have the marks with the same keys but different values as spec.markItems. ConflictPolicy must be "Ignore" or "Overwrite". "Ignore" indicates that PodMarker will treat these conflicting Pods as unmatched Pods. "Overwrite" indicates that PodMarker will over-write these conflicting marks. default is "Ignore"
                    type: string
                  replicas:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Replicas is the number/percentage of Pods that should be marked; If Replicas is nil, will mark all matched Pods; default is nil
                    x-kubernetes-int-or-string: true
                type: object
            required:
            - markItems
            - matchRequirements
            type: object
          status:
            description: PodMarkerStatus defines the observed state of PodMarker.
            properties:
              desired:
                description: Desired denotes the number of the Pods that users want to mark. Conflicting Pods ARE NOT counted by this field.
                format: int32
                type: integer
              failed:
                description: Failed denotes the number of failures when marking.
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed for this PodMarker. It corresponds to the PodMarker's generation, which is updated on mutation by the API Server.
                format: int64
                type: integer
              succeeded:
                description: Succeeded denotes the number of Pods that have been marked successful.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
