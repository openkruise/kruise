name: CI

on:
  push:
    branches:
      - master
      - release-*
  pull_request: { }
  workflow_dispatch: { }

# Declare default permissions as read only.
permissions: read-all

env:
  # Common versions
  GO_VERSION: '1.22'
  GOLANGCI_VERSION: 'v2.1'
  DOCKER_BUILDX_VERSION: 'v0.4.2'

  # Common users. We can't run a step 'if secrets.AWS_USR != ""' but we can run
  # a step 'if env.AWS_USR' != ""', so we copy these to succinctly test whether
  # credentials have been provided before trying to run steps that need them.
  DOCKER_USR: ${{ secrets.DOCKER_USR }}
  AWS_USR: ${{ secrets.AWS_USR }}

jobs:
  typos-check:
    name: Spell Check with Typos
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check spelling with custom config file
        uses: crate-ci/typos@0f0ccba9ed1df83948f0c15026e4f5ccfce46109 # v1.32.0
        with:
          config: ./typos.toml

  golangci-lint:
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - name: Setup Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Cache Go Dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Code generate
        run: |
          make generate
      - name: Lint golang code
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: ${{ env.GOLANGCI_VERSION }}
          args: --verbose
          skip-pkg-cache: true
          mod: readonly
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@d2a392a13760cb64cb6bbd31d4bed2a7d9a5298d # master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3.29.0
        with:
          sarif_file: 'trivy-results.sarif'

#  markdownlint-misspell-shellcheck:
#    runs-on: ubuntu-24.04
#    # this image is build from Dockerfile
#    # https://github.com/pouchcontainer/pouchlinter/blob/master/Dockerfile
#    container: pouchcontainer/pouchlinter:v0.1.2
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Run misspell
#        run: find  ./* -name  "*"  | grep -v vendor | xargs misspell -error
#      - name: Run shellcheck
#        run: find ./ -name "*.sh" | grep -v vendor | xargs shellcheck
#      - name: Lint markdown files
#        run: find  ./ -name  "*.md" | grep -v vendor | grep -v commandline |  grep -v .github |  grep -v swagger |  grep -v api |  xargs mdl -r ~MD010,~MD013,~MD014,~MD022,~MD024,~MD029,~MD031,~MD032,~MD033,~MD036
#      - name: Check markdown links
#        run: |
#          set +e
#          for name in $(find . -name \*.md | grep -v vendor | grep -v CHANGELOG); do
#            if [ -f $name ]; then
#              markdown-link-check -q $name -c .github/workflows/markdown-link-check.config.json;
#              if [ $? -ne 0 ]; then
#                code=1
#              fi
#            fi
#          done
#          bash -c "exit $code";

  unit-tests:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - name: Fetch History
        run: git fetch --prune --unshallow
      - name: Setup Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Cache Go Dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Run Unit Tests
        run: |
          make test
          git status
      - name: Publish Unit Test Coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          file: cover.out
  # See: https://google.github.io/oss-fuzz/getting-started/continuous-integration/
  Fuzzing:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Build Fuzzers
        id: build
        uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@abe2c06d0e162320403dd10e8268adbb0b8923f8 # master
        with:
          oss-fuzz-project-name: 'openkruise'
          language: go
      - name: Run Fuzzers
        uses: google/oss-fuzz/infra/cifuzz/actions/run_fuzzers@abe2c06d0e162320403dd10e8268adbb0b8923f8 # master
        with:
          oss-fuzz-project-name: 'openkruise'
          language: go
          fuzz-seconds: 1200
          output-sarif: true
      - name: Upload Crash
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: failure() && steps.build.outcome == 'success'
        with:
          name: artifacts
          path: ./out/artifacts
      - name: Upload Sarif
        if: always() && steps.build.outcome == 'success'
        uses: github/codeql-action/upload-sarif@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3.29.0
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: cifuzz-sarif/results.sarif
          checkout_path: cifuzz-sarif